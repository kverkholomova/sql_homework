/*1.	Вивести значення наступних колонок: назва книги, ціна, назва видавництва. Використовувати внутрішнє з'єднання, застосовуючи where.*/
SELECT
    books.book_name,
    books.book_price,
    book_publishing.name AS publisher_name
FROM
    books,
    book_publishing
WHERE
    books.book_id_publishing = book_publishing.id

/*2.	Вивести значення наступних колонок: назва книги, назва категорії. Використовувати внутрішнє з'єднання, застосовуючи inner join.*/
SELECT
    books.book_name,
    book_publishing.name AS publisher_name
FROM
    books
INNER JOIN book_publishing ON books.book_id_publishing = book_publishing.id;

/*3.	Вивести значення наступних колонок: назва книги, ціна, назва видавництва, формат.*/
SELECT
    books.book_name,
    books.book_price,
    book_publishing.name AS publisher_name,
    books.book_format AS FORMAT
FROM
    books
JOIN book_publishing ON books.book_id_publishing = book_publishing.id;

/*4.	Вивести значення наступних колонок: тема, категорія, назва книги, назва видавництва. Фільтр по темам і категоріям.*/
SELECT
    books.book_name,
    book_publishing.name AS publisher_name,
    book_topic.name AS theme,
    book_category.name AS category
FROM
    books
JOIN book_publishing ON books.book_id_publishing = book_publishing.id
JOIN book_topic ON books.book_id_topic = book_topic.id
JOIN book_category ON books.book_id_category = book_category.id
ORDER BY
    books.book_id_topic ASC,
    book_category.name ASC;

/*5.	Вивести книги видавництва 'BHV', видані після 2000 р*/
SELECT
    *
FROM
    books
WHERE
    book_id_publishing = 1 AND YEAR(book_datee) > 2000;

/*6.	Вивести загальну кількість сторінок по кожній назві категорії. Фільтр по спадаючій кількості сторінок.*/
    SELECT
        book_category.name AS category,
        SUM(book_pages) AS pages_count
    FROM
        books
    JOIN book_category ON books.book_id_category = book_category.id
	GROUP BY
    	category
    ORDER BY
        book_pages DESC;


/*7.	Вивести середню вартість книг по темі 'Використання ПК' і категорії 'Linux'.*/
SELECT
    AVG(book_price)
FROM
    books
WHERE
    books.book_id_topic = 1 AND books.book_id_category = 6;

/*8.	Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи where.*/
SELECT
    books.*,
    book_publishing.name AS publisher_name,
    book_category.name AS book_category,
    book_topic.name AS book_topic
FROM
    books,
    book_publishing,
    book_category,
    book_topic
WHERE
    books.book_id_publishing = book_publishing.id AND books.book_id_category = book_category.id AND books.book_id_topic = book_topic.id;

/*9.	Вивести всі дані універсального відношення. Використовувати внутрішнє з'єднання, застосовуючи inner join.*/
SELECT
    books.*,
    book_publishing.name AS publisher_name,
    book_category.name AS book_category,
    book_topic.name AS book_topic
FROM
    books
INNER JOIN book_publishing ON books.book_id_publishing = book_publishing.id
INNER JOIN book_category ON books.book_id_category = book_category.id
INNER JOIN book_topic ON books.book_id_topic = book_category.id;

/*10.	Вивести всі дані універсального відношення. Використовувати зовнішнє з'єднання, застосовуючи left join / rigth join.*/
SELECT
    books.*,
    book_publishing.name AS publisher_name,
    book_category.name AS book_category,
    book_topic.name AS book_topic
FROM
    books
LEFT JOIN book_publishing ON books.book_id_publishing = book_publishing.id
LEFT JOIN book_category ON books.book_id_category = book_category.id
LEFT JOIN book_topic ON books.book_id_topic = book_category.id;
SELECT
    books.*,
    book_publishing.name AS publisher_name,
    book_category.name AS book_category,
    book_topic.name AS book_topic
FROM
    books
RIGHT JOIN book_publishing ON books.book_id_publishing = book_publishing.id
RIGHT JOIN book_category ON books.book_id_category = book_category.id
RIGHT JOIN book_topic ON books.book_id_topic = book_category.id;

/* 13.	Вивести всі книги категорії 'C ++'. Використовувати підзапити (subquery).*/
SELECT
    *
FROM
    books
WHERE
    book_id_category =(
    SELECT
        id
    FROM
        book_category
    WHERE
        book_category.name = 'C&C++'
);

/*14.	Вивести книги видавництва 'BHV', видані після 2000 р Використовувати підзапити (subquery).*/
SELECT
    *
FROM
    books
WHERE
    book_id_category =(
    SELECT
        id
    FROM
        book_category
    WHERE
        book_category.name = 'BHV С.-Петербург'
) AND YEAR(book_datee) > 2000;

/*15.	Вивести список видавництв, у яких розмір книг перевищує 400 сторінок. Використовувати пов'язані підзапити (correlated subquery).*/
SELECT
    *
FROM
    book_publishing
WHERE
    (
    SELECT
        MIN(book_pages)
    FROM
        books
    WHERE
        books.book_id_publishing = book_publishing.id
) >= 400;

/*16.	Вивести список категорій в яких більше 3-х книг. Використовувати пов'язані підзапити (correlated subquery).*/
SELECT
    *
FROM
    book_category
WHERE
    (
    SELECT
        COUNT(*)
    FROM
        books
    WHERE
        books.book_id_category = book_category.id
) > 3;


/*17.	Вивести список книг видавництва 'BHV', якщо в списку є хоча б одна книга цього видавництва. Використовувати exists.*/
SELECT
    *
FROM
    books
WHERE EXISTS
    (
    SELECT
        *
    FROM
        book_publishing
    WHERE
        book_publishing.name = 'BHV С.-Петербург' AND books.book_id_publishing = book_publishing.id
);

/*18.	Вивести список книг видавництва 'BHV', якщо в списку немає жодної книги цього видавництва. Використовувати not exists.*/
SELECT
    *
FROM
    books
WHERE NOT EXISTS
    (
    SELECT
        *
    FROM
        book_publishing
    WHERE
        book_publishing.name = 'BHV С.-Петербург' AND books.book_id_publishing = book_publishing.id
) AND book_id_publishing =(
    SELECT
        book_publishing.id
    FROM
        book_publishing
    WHERE
        book_publishing.name = 'BHV С.-Петербург'
);

/*19.	Вивести відсортований загальний список назв тем і категорій. Використовувати union.*/
SELECT
    *
FROM
    book_topic
UNION
SELECT
    *
FROM
    book_category
ORDER BY NAME;

/*20.	Вивести відсортований в зворотному порядку загальний список перших слів, назв книг і категорій що не повторюються. Використовувати union.*/
SELECT DISTINCT name FROM (
  (
    SELECT REGEXP_SUBSTR(TRIM(book_name), '^[^\\s]+') as name
    FROM books
  )
  UNION ALL
  (
    SELECT REGEXP_SUBSTR(TRIM(name), '^[^\\s]+') as name
    FROM book_category
  )
) names
ORDER BY name DESC